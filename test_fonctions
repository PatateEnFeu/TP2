from configuration import FICHIER_UTILISATEURS, FICHIER_PROPRIETES, FICHIER_SESSION
from gestionnaire_donnees import charger_proprietes, sauvegarder_propriete
from gestionnaire_utilisateurs import utilisateur_est_connecte
from utilitaires import afficher_tableau, formater_argent

# Fonction sauvegarder_utilisateurs

# utilisateurs = {'chien':'wouaf wouaf', 'chatte': 'miaou', 'vache':'meuh', 'A': 'B'}

# with open(FICHIER_UTILISATEURS,'w') as save_line:
#     for cle in utilisateurs:
#         save_line.write(f"{cle}, {utilisateurs[cle]}\n")





# Fonction charger_proprietes

# list_prop = []
# with open(FICHIER_PROPRIETES,'r') as info_prop:
#     info_prop.readline() # passer la 1ère ligne d'entête
#     for ligne in info_prop:
#         ligne = ligne.strip()
#         if ligne: # si la ligne du fichier n'est pas vide
#             elements = ligne.split(',')
#             dict_prop = {
#                 'prix': int(elements[0]),
#                 'ville': elements[1],
#                 'type': elements[2],
#                 'chambres': int(elements[3]),
#                 'salles_de_bains': int(elements[4])
            
#             }
#             list_prop.append(dict_prop)

#         else : # si la ligne du fichier est vide
#             list_prop.append([])

# print (list_prop)

# à mettre dans fichier pour test
# prix,ville,type,chambres,salles_de_bains
# 5000000,Québec,Maison,4,2
# 4554545,Montréal,Condo,7,6

# 9888800,Toronto,Maison,7,9




# Fonction recuperer_utilisateurs_courant


# with open (FICHIER_SESSION,'r') as connected:
#     for ligne in connected:
#         ligne = ligne.strip()
#         if ligne:
#             print(str(ligne))
#         else:
#             print ('rien à voir')


# Fonction lister_propriete
# list_of_list = []
# sous_liste = []
# list_prop = charger_proprietes()

# for valeur in list_prop:
#     sous_liste = [
#         formater_argent(valeur["prix"]),
#         valeur["ville"],
#         valeur["type"],
#         valeur["chambres"],
#         valeur["salles_de_bains"]
#     ]

#     list_of_list.append(sous_liste)

# if list_prop :
#     afficher_tableau(list_of_list,["Prix","Ville","Type de propriété","Chambres","Salles de bains"])

# else :
    # print("Aucune propriété disponible")





# Fonction ajouter_propriété


def demander_nombre_positif(prompt, optionnel=False):
  while True:
    nombre = input(f"{prompt}: ")
    if optionnel and not nombre:
        return None
    try:
        nombre = int(nombre)
        if nombre > 0:
            return nombre
        else:
            print("Veuillez saisir un nombre positif.")
    except ValueError:
        print("Valeur invalide. Veuillez saisir un nombre.")



def demander_ville(optionnel=False):
  print(f"Choisissez une ville parmi les suivantes: {', '.join(VILLES)}")
  while True:
    ville = input("Ville: ").capitalize()
    if optionnel and not ville:
        return None
    if ville in VILLES:
        return ville
    print(f"Ville invalide. Choisissez parmi: {', '.join(VILLES)}")



def demander_type_de_propriete(optionnel=False):
    """Demande à l'utilisateur de choisir un type de propriété parmi les choix définis.

    Args:
        optionnel (bool): Indique si la saisie est facultative.

    Returns:
        str: Le type de propriété choisi.
    """
    print(
        f"Choisissez un type de propriété parmi les suivants: {', '.join(TYPES_DE_PROPRIETE)}"
    )
    while True:
        type_de_propriete = input("Type de propriété: ").capitalize()
        if optionnel and not type_de_propriete:
            return None
        if type_de_propriete in TYPES_DE_PROPRIETE:
            return type_de_propriete
        print(
            f"Type de propriété invalide. Choisissez parmi: {', '.join(TYPES_DE_PROPRIETE)}"
        )



from gestionnaire_proprietes import demander_ville, demander_nombre_positif, demander_type_de_propriete
# def ajouter_propriete():
info_prop = {}
if True:
  prix = demander_nombre_positif("Entrez le prix")
  ville = demander_ville()
  Type_prop = demander_type_de_propriete()
  nbr_chamb = demander_nombre_positif("Entrez le nombre de chambres")
  nbr_sdb = demander_nombre_positif("Entrez un nombre de salles de bains")

  info_prop = {
      "prix": prix,
      "ville": ville,
      "type" : Type_prop,
      "chambres": nbr_chamb,
      "salles_de_bains": nbr_sdb
  }

  sauvegarder_propriete(info_prop)









